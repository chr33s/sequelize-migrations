{%- macro Values(create, key, val) -%}
  {%- if val['key'] and ['type', 'defaultValue'].includes(key) -%}
    DataTypes.{{ val._key if not create and val['_key'] else val.key }}(
      {{- val.options|dump|safe -}}
    )
  {%- else -%}
    {{ val|dump|safe }}
  {%- endif -%}
{%- endmacro -%}

{%- macro Type(create, action) -%}
  {%- if not create and action === 'add' -%}
    {{ 'remove' }}
  {%- elif not create and action === 'remove' -%}
    {{ 'add' }}
  {%- else -%}
    {{ action }}
  {%- endif -%}
{%- endmacro -%}

{%- macro Column(create, table, options) -%}
  {% for column in options %}
    query.{{ Type(create, column.action) }}Column(
      '{{ table }}',
      '{{ column.name }}',
      {%- if (create and column.action !== 'remove') or (not create and column.action !== 'add') %}
      {
      {%- for key, val in column.options %}
        {{ key }}: {{ Values(create, key, val) }},
      {%- endfor %}
      },
      {%- endif %}
    ),
  {%- endfor -%}
{%- endmacro -%}

'use strict'

module.exports = {
  up: (query, DataTypes) => Promise.all([
    {{- Column(create, table, options) }}
  ]),
  {% set create = false if create else true %}
  down: (query, DataTypes) => Promise.all([
    {{- Column(create, table, options) }}
  ])
}
